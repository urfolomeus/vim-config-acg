call pathogen#infect()
filetype off
syntax on
filetype plugin indent on       " load file type plugins + indentation

set nocompatible

set number
set ruler

set encoding=utf-8

set showcmd                     " display incomplete commands

"" Whitespace
set nowrap
set tabstop=2 shiftwidth=2
set softtabstop=2
set expandtab
set list listchars=tab:\ \ ,trail:Â·
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn,vendor/gems/*

" Map leader key
:let mapleader = ","

" Default color scheme
color vibrantink

" Directories for swp files
set backupdir=~/.vim/backup
set directory=~/.vim/backup

" Change cursor in insert mode
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

if has("statusline") && !&cp
  set laststatus=2  " always show the status bar

  "Start the status line
  set statusline=%f\ %m\ %r

  " Add fugitive
  set statusline+=%{fugitive#statusline()}

  " Finish the statusline
  set statusline+=\ Line:%l/%L
  set statusline+=\ Buf:%n
endif

if has("autocmd")
  " make uses real tabs
  au FileType make set noexpandtab

  " Thorfile, Rakefile, Vagrantfile and Gemfile are Ruby
  au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru}    set ft=ruby

  " md, markdown, and mk are markdown and define buffer-local preview
  au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} call s:setupMarkup()

  " add json syntax highlighting
  au BufNewFile,BufRead *.json set ft=javascript

  au BufRead,BufNewFile *.txt call s:setupWrapping()

" Remember last location in file
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
        \| exe "normal g'\"" | endif
endif
